NODE_ENV=development

# AuthService Configuration
AUTH_SERVICE_PORT=50051
AUTH_DB_HOST=localhost          // For local direct connection to DB if needed
AUTH_DB_PORT=5432               // For local direct connection to DB if needed (host mapped port)
AUTH_DB_USERNAME=auth_user
AUTH_DB_PASSWORD=auth_password
AUTH_DB_DATABASE=auth_service_db
BCRYPT_SALT_ROUNDS=10

# JWT Configuration for AuthService
JWT_ACCESS_SECRET=YOUR_VERY_STRONG_AND_UNIQUE_ACCESS_SECRET_CHANGE_ME
JWT_ACCESS_EXPIRES_IN=15m
JWT_REFRESH_SECRET=YOUR_DIFFERENT_VERY_STRONG_AND_UNIQUE_REFRESH_SECRET_CHANGE_ME
JWT_REFRESH_EXPIRES_IN=7d

# RabbitMQ Configuration
RABBITMQ_USER=guest
RABBITMQ_PASS=guest
RABBITMQ_NODE_PORT=5672         // Host port for AMQP
RABBITMQ_MANAGEMENT_PORT=15672  // Host port for Management UI
RABBITMQ_AUTH_QUEUE=auth_events_queue // Default queue name for auth events related to its client
RABBITMQ_URI=amqp://${RABBITMQ_USER:-guest}:${RABBITMQ_PASS:-guest}@localhost:${RABBITMQ_NODE_PORT:-5672} // For local client outside Docker

# ProfileService Configuration (Placeholder for now)
PROFILE_SERVICE_PORT=50052
PROFILE_DB_HOST=localhost       // For local direct connection to DB if needed
PROFILE_DB_PORT_HOST=27017      // Host port for Mongo
PROFILE_DB_USERNAME=profile_user
PROFILE_DB_PASSWORD=profile_password
PROFILE_DB_DATABASE=profile_service_db
# PROFILE_DB_URI=mongodb://${PROFILE_DB_USERNAME}:${PROFILE_DB_PASSWORD}@${PROFILE_DB_HOST}:${PROFILE_DB_PORT_HOST}/${PROFILE_DB_DATABASE}?authSource=admin

# ApiGateway Configuration (Placeholder for now)
API_GATEWAY_PORT=3000
API_GATEWAY_PORT_HOST=3000
# When ApiGateway runs locally (not in Docker) and calls Dockerized services:
# API_GATEWAY_AUTH_SERVICE_URL=localhost:50051
# API_GATEWAY_PROFILE_SERVICE_URL=localhost:50052

# Service Host Ports (ports exposed on your actual machine for direct access from host)
AUTH_SERVICE_PORT_HOST=50051
PROFILE_SERVICE_PORT_HOST=50052